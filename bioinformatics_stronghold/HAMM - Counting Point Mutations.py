"""
Rosalind Problem: HAMM - Counting Point Mutations
Problem URL: http://rosalind.info/problems/hamm/

Author: Bunsree Patel
Date: October 29, 2025
"""

"""We are interested in minimizing the number of (point) mutations separating two species.
This is on account of the biological principle of parsimony, which demands that evolutionary histories should be as simply explained as possible."""

"""Sample Dataset Problem

Given two strings s and t of equal length, the Hamming distance between s and t, denoted dₕ(s,t), is the numbner of corresponding symbols that differ in s and t.

    Given: Two strings s and t of equal length (not exceeding 1kbp).
    Return: The Hamming distance dₕ(s,t)."""

# Import the function
from DNAToolkit import hamming_distance

# Sample DNA strings
s = "GAGCCTACTAACGGGAT"
t = "CATCGTAATGACGGCCT"

# Call the function
dₕ = hamming_distance(s, t)
print(dₕ)
"""Output: 7"""

print(hamming_distance(s,t))
"""Output: 7"""

"""Actual Dataset Problem"""

from DNAToolkit import hamming_distance

s = "CGTCCGAGTCATGGCGCCGTTAGACCGGTGCCAGTCCGTTTTGCTCTTGCAGGGAAAGCCACACTGGCTTTACCCGCTTTGCGCTAGCACGGGAGTCACACCTAAGACTAGCACACCTCCGGAATGGGTGTATGCCCGGTGCCGCGAAAGCGATCTTCTAGGCAGAACGTGCCGCGCGTCGCTCAATGTTACTATATTCGCAAAAGTTGCCGAACAGGGTGTATGCTAGCAGAACATCTCTCATTTAGTATACATGGGTGCCTTGGCCTCGCTAAGTAGTCTTACATTCCGGACATGTATAGACGTTTAGATAAACAGGTTAGGCTGTCAAGGCCATGATGCTGAGTAAGGTTACGCGGTCGTGTCGACGATTCTGAGACCGCACACGGATTACTTGCGCACACCACGGTTAACACACGCTAAGGGGAATAACTTAGTGTTGTCGCTAGCAAATGTACAAAGCACCAATTGCTTTCGATTACCCTAGCGAAACCCGCCCAGACCACCATAGGATATTGGGTGTTTGTTCTATAGCAATGGACTGCAGCTTGCTGGCCCCGAGTCCAACAAGCATCGTTAAGAACAAACCAATACGAGAACTCTTTATATAATACCGGCTCCTGGCGCTATCACAACAAATTCGAGTAGTTATCCCAATTGGACCCTGCCAGGGCCGTGGGCACCAACTCGGATTAATGCCGGAGACTATTGGCCGCAACCTTGGGACATGTCAACGTGGAATGGTGAAGCCTCGCGTTATGAAAAAGTAGACTTCTAGCGATTTTTTCACATTTGACGGTCGATGGGAGTATAACTATACGGAAATTGGGCGCCGCCAGGTTGTAACCCCGGTGCTGCTCGATCAGGATCAGTGGCCCCCGGGCTACAGATGATCGTCATGAGAAATTCGCCCGACGCCTTCCGTAGCTTATTTTTACGATCCAAGTGAGCCACATTGATTTCGTAACGAG"
t = "AGCCCGAGTACCGTGGGCATTAGCTATATTCTGCGACGCCGTGCGCTGGGGGAAACAGTCCCACTGGCATGCCGGGACCGAGCTATGCCAGTGAGTCGACTTAGCGACGGGACAGTGTCCTCGATGAATTAATGTCGGTATACTGTTAACCCACGTGCTAGTCTAAACTAGCTTTGCGTGGCTGACTCTGATGTTATTACGCTACCGTGACTGAGGGAGTGCTCTCGCTCAGGAGATTCCTATAATCACATTTATGGATTCTTTTCACTCTAGAGGTAGTCGTCTAGTTCCGTCAGGCATAATACTATGGGTTAGCATCACCGACATGGCATCCTATGAGCCCCGGCTCGGTTTTAAGGTCGAGGCTCCTCTTGTGAGACCCCACACTCTGTACTTGCGGGTACCTACGATGCGCAGAGCTAAGGTGAGTGTCTTCATGTCGCCGGTCAGAATCGTAATTCTGAACGATTCCTGTTACAGCCATTGGTGAAGCGCACCGGGAGTCTTAAAGGAAATTAAGTGTACGTTTTATGGCAGGCGAGACGAATTTTGAAGGCCAAAGGGGACTAAGCGCCCGCGAGAAGGAGACCGTACGACAACTGTTAGTGTAAATAAGTCTGCAGACTCGATCTAAACAAAGACTACTAATAGTCCGAACCAGATCTTACAGACGTTTCAGTCGCCCATCCGTAAAGATGCCAGACAGCGTTGTGCCCGCACTTGGAAGTCGCCATCGCTGCCCGGTGACGCCACGCTCTTTGCTACAGTAGCTTTCGAGCGCATTTTCCATTTTTGAAACAATATGTCCGCATAACTTTACTGAAAGGTGTATCCGAGCGGCTCCAAAATCGGGTAAGCAAGATCAGGGACTGTGTAGGCGGGGCTACAAGTGGTACTAAACATAAATTCTACCGACGGCTGGGATCGTGTGTTCGCCGGTCACGAGATTGCCGCATTGTCCACGTAACCAG"

dₕ = hamming_distance(s, t)
print(dₕ)
"""Output: 469"""